worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logging format optimized for Fly.io
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';

    access_log /var/log/nginx/access.log main;

    # Basic settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 100M;
    server_tokens off;

    # Buffer settings for better performance
    client_body_buffer_size 128k;
    client_header_buffer_size 1k;
    large_client_header_buffers 4 4k;
    output_buffers 1 32k;
    postpone_output 1460;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 10240;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/x-javascript
        application/xml+rss
        application/javascript
        application/json
        application/xml
        application/rss+xml
        application/atom+xml
        image/svg+xml;

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=login:10m rate=5r/m;

    # Real IP configuration for Fly.io
    set_real_ip_from 10.0.0.0/8;
    set_real_ip_from 172.16.0.0/12;
    set_real_ip_from 192.168.0.0/16;
    set_real_ip_from fc00::/7;
    real_ip_header X-Forwarded-For;
    real_ip_recursive on;

    upstream php-fpm {
        server unix:/var/run/php82-fpm.sock;
        keepalive 16;
    }

    server {
        listen 8080;
        server_name _;
        root /var/www/html/public;
        index index.php index.html;

        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header Referrer-Policy "no-referrer-when-downgrade" always;
        add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline' 'unsafe-eval'" always;
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

        # Fly.io specific headers
        add_header X-Fly-Region $http_fly_region always;
        add_header X-Fly-Request-Id $http_fly_request_id always;

        # Handle static files with aggressive caching
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot|webp|avif)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header Vary "Accept-Encoding";
            try_files $uri =404;

            # Enable gzip for static assets
            gzip_static on;
        }

        # Handle build assets specifically
        location /build/ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            try_files $uri =404;
            gzip_static on;
        }

        # Rate limiting for API routes
        location /api/ {
            limit_req zone=api burst=20 nodelay;
            try_files $uri $uri/ /index.php?$query_string;
        }

        # Rate limiting for login routes
        location ~ ^/(login|register|password) {
            limit_req zone=login burst=5 nodelay;
            try_files $uri $uri/ /index.php?$query_string;
        }

        # Health check endpoint (no rate limiting)
        location = /health {
            access_log off;
            return 200 '{"status":"ok","timestamp":"$time_iso8601","server":"$hostname"}';
            add_header Content-Type application/json;
        }

        # Metrics endpoint for Fly.io monitoring
        location = /metrics {
            access_log off;
            stub_status on;
            allow 127.0.0.1;
            allow 10.0.0.0/8;
            allow 172.16.0.0/12;
            allow 192.168.0.0/16;
            deny all;
        }

        # Laravel application routes
        location / {
            try_files $uri $uri/ /index.php?$query_string;
        }

        # Handle PHP files
        location ~ \.php$ {
            fastcgi_split_path_info ^(.+\.php)(/.+)$;
            fastcgi_pass php-fpm;
            fastcgi_index index.php;
            include fastcgi_params;
            fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
            fastcgi_param DOCUMENT_ROOT $realpath_root;
            fastcgi_param PATH_INFO $fastcgi_path_info;
            fastcgi_hide_header X-Powered-By;

            # Timeout settings
            fastcgi_connect_timeout 60s;
            fastcgi_send_timeout 180s;
            fastcgi_read_timeout 180s;
            fastcgi_buffer_size 128k;
            fastcgi_buffers 4 256k;
            fastcgi_busy_buffers_size 256k;
            fastcgi_temp_file_write_size 256k;
            fastcgi_intercept_errors on;

            # Pass Fly.io headers to PHP
            fastcgi_param HTTP_FLY_REGION $http_fly_region;
            fastcgi_param HTTP_FLY_REQUEST_ID $http_fly_request_id;
        }

        # Deny access to hidden files and sensitive directories
        location ~ /\. {
            deny all;
        }

        location ~ ^/(\.env|\.git|storage|bootstrap/cache|vendor|node_modules) {
            deny all;
        }

        # Robots.txt
        location = /robots.txt {
            access_log off;
            log_not_found off;
        }

        # Favicon
        location = /favicon.ico {
            access_log off;
            log_not_found off;
            expires 1y;
        }

        # Error pages
        error_page 404 /index.php;
        error_page 500 502 503 504 /50x.html;

        location = /50x.html {
            root /var/lib/nginx/html;
        }
    }
}
